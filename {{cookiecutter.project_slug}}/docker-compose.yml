version: '2.1'

services:
  postgresdb:
    restart: always
    image: postgres:10
    env_file:
      - docker-files/databases.environ
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - shopnet

  redishost:
    image: redis
    volumes:
      - 'redisdata:/data'
    networks:
      - shopnet

  elasticsearch:
    image: elasticsearch:1.7.5
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - shopnet

  wsgiapp:
    restart: always
    build:
      context: .
      dockerfile: docker-files/wsgiapp.dockerfile
    image: {{ cookiecutter.project_slug }}
    env_file:
      - docker-files/databases.environ
{%- if cookiecutter.use_stripe %}
      - docker-files/stripe.environ
{%- endif %}
{%- if cookiecutter.use_sendcloud %}
      - docker-files/sendcloud.environ
{%- endif %}
    environment:
      - VIRTUAL_HOST={{ cookiecutter.virtual_host }}
{%- if cookiecutter.dockerize == 'uwsgi' %}
      - VIRTUAL_PROTO=uwsgi
      - LETSENCRYPT_HOST={{ cookiecutter.virtual_host }}
      - LETSENCRYPT_EMAIL={{ cookiecutter.email }}
{%- endif %}
      - DJANGO_SETTINGS_MODULE={{ cookiecutter.app_name }}.settings
    volumes:
      - shopmedia:/web/workdir
{%- if cookiecutter.dockerize == 'uwsgi' %}
      - nginxproxy_nginxvhostd:/web/nginx-conf
{%- endif %}
    command: uwsgi --ini uwsgi.ini
    depends_on:
      - postgresdb
      - redishost
      - elasticsearch
    networks:
      - shopnet
{%- if cookiecutter.dockerize == 'uwsgi' %}
      - nginx-proxy
    expose:
      - 9009
{%- else %}
    ports:
      - 9009:9009
{%- endif %}

  worker:
    restart: always
    image: {{ cookiecutter.project_slug }}
    environment:
      - DJANGO_SETTINGS_MODULE={{ cookiecutter.app_name }}.settings
    env_file:
      - docker-files/databases.environ
      - docker-files/email.environ
    command: su django -c /web/worker.py
    volumes:
      - shopmedia:/web/workdir
    depends_on:
      - postgresdb
      - redishost
    networks:
      - shopnet

networks:
  shopnet:
{%- if cookiecutter.dockerize == 'uwsgi' %}
  nginx-proxy:
    external: true
{%- endif %}

volumes:
  pgdata:
  redisdata:
  shopmedia:
  esdata:
{%- if cookiecutter.dockerize == 'uwsgi' %}
  nginxproxy_nginxvhostd:
    external: true
{%- endif %}
